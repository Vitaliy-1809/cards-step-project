export default class API{static URL="https://ajax.test-danit.com/api/v2/cards";static getHeaders(){return{"Content-Type":"application/json",Authorization:`Bearer ${API.token||localStorage.token}`}}static async login(e){return await fetch(`${API.URL}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.ok&&e.text())}static saveToken(e){API.token=e}static async saveCard(e){const t=await fetch(`${API.URL}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${API.token||localStorage.token}`},body:JSON.stringify(e)});return t.json()}static async getAllCards(){const e=await fetch(`${API.URL}`,{method:"GET",headers:API.getHeaders()});return e.json()}static async deleteCard(e){await fetch(`${API.URL}/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${API.token||localStorage.token}`}})}static async editCard(e){const t=await fetch(`${API.URL}/${e.id}`,{method:"PUT",headers:API.getHeaders(),body:JSON.stringify(e)});return t.json()}}import Component from"./Component.js";import Select from"./Select.js";import{selectEditType,editVisitDentistFormClasses,editVisitTherapistFormClasses,editVisitCardiologistFormClasses}from"./config.js";import API from"./API.js";import VisitCardiologistForm from"./VisitCardiologistForm.js";import VisitTherapistForm from"./VisitTherapistForm.js";import VisitDentistForm from"./VisitDentistForm.js";export default class Card extends Component{constructor(e,t){super({parent:document.querySelector(".card-container"),self:document.createElement("div"),cardBody:document.createElement("div"),cardFooter:document.createElement("div"),cardFullName:document.createElement("h5"),cardDoctorType:document.createElement("h6"),cardVisitPurpose:document.createElement("p"),cardUrgencyType:document.createElement("p"),cardRegularPressure:document.createElement("p"),cardBMI:document.createElement("p"),cardCVD:document.createElement("p"),cardAge:document.createElement("p"),cardLastVisitDate:document.createElement("p"),cardDescription:document.createElement("p"),btnShowMore:document.createElement("button")},e);var{id:r,fullName:o,doctorType:s,visitPurpose:a,urgencyType:i,visitDescription:l,regularPressure:n,BMI:c,CVD:d,age:m,lastVisitDate:e}=t;this.cardObj=t,this.id=r,this.fullName=o,this.doctorType=s,this.visitPurpose=a,this.urgencyType=i,this.visitDescription=l,this.regularPressure=n,this.BMI=c,this.CVD=d,this.age=m,this.lastVisitDate=e}async showMore(){const{cardBody:e,cardVisitPurpose:t,cardUrgencyType:r,cardDescription:o,cardRegularPressure:s,cardBMI:a,cardCVD:i,cardAge:l,cardLastVisitDate:n,btnShowMore:c}=this.elements;"cardiologist"===this.doctorType?await e.append(t,r,o,s,a,i,l):"therapist"===this.doctorType?await e.append(t,r,o,l):"dentist"===this.doctorType&&await e.append(t,r,o,n),await c.remove()}async render(){let{self:r,cardFooter:e,cardBody:t,cardFullName:o,cardDoctorType:s,cardVisitPurpose:a,cardUrgencyType:i,cardDescription:l,cardRegularPressure:n,cardBMI:c,cardCVD:d,cardAge:m,cardLastVisitDate:u,btnShowMore:p}=this.elements;const v=new Select(selectEditType).render();r.id=this.id,o.textContent=`${this.fullName}`,s.textContent=`Doctor: ${this.doctorType}`,a.textContent=`Visit purpose: ${this.visitPurpose}`,i.textContent=`Urgency: ${this.urgencyType}`,this.visitDescription&&(l.textContent=`Visit description: ${this.visitDescription}`),n.textContent=`Blood pressure: ${this.regularPressure}`,c.textContent=`Body Mass Index: ${this.BMI}`,d.textContent=`Cardiovascular disease: ${this.CVD}`,m.textContent=`Age: ${this.age}`,u.textContent=`Date of last visit: ${this.lastVisitDate}`,await t.append(o,s),p.textContent="Show more",await p.addEventListener("click",()=>this.showMore()),await v.addEventListener("change",()=>{const e=document.querySelector(".edit-doctor"),t=document.querySelector(".edit-doctor-wrapper");"Edit"===v.value?(document.querySelector("#editFormModal").classList.add("active"),e.setAttribute("disabled",""),null!==t.nextSibling&&t.nextSibling.remove(),"cardiologist"===this.doctorType?(e.value="cardiologist",new VisitCardiologistForm(editVisitCardiologistFormClasses,!0,this.cardObj,".edit-doctor-wrapper").render()):"dentist"===this.doctorType?(e.value="dentist",new VisitDentistForm(editVisitDentistFormClasses,!0,this.cardObj,".edit-doctor-wrapper").render()):"therapist"===this.doctorType&&(e.value="therapist",new VisitTherapistForm(editVisitTherapistFormClasses,!0,this.cardObj,".edit-doctor-wrapper").render()),v.value="Choose option"):"Delete"===v.value&&(API.deleteCard(this.id),r.remove())}),e.append(p,v),r.append(t,e),super.render()}}export default class Component{constructor(e,t){this.elements=e,this.classes=t}render(){const{self:e,parent:t}=this.elements;for(var r in this.elements){const o=this.elements[r];o.className=this.classes[r]}t.prepend(e)}}import API from"./API.js";import Component from"./Component.js";import Select from"./Select.js";import Input from"./Input.js";import{cardClasses,searchDoctor,searchTitle,searchUrgency}from"./config.js";import Card from"./Card.js";export default class Filter extends Component{constructor(e){super({parent:document.querySelector(".main"),self:document.createElement("div"),container:document.createElement("form"),searchBtn:document.createElement("button"),resetFilter:document.createElement("button")},e)}clearFilterFields(){searchByContent.value="",searchByDoctor.value="Select doctor",searchByUrgency.value="Select urgency"}clearCards(){const e=document.querySelector(".card-container");for(;e.firstChild;)e.removeChild(e.firstChild)}async reset(e){if(e.preventDefault(),""!==searchByContent.value||"Select doctor"!==searchByDoctor.value||"Select urgency"!==searchByUrgency.value){const t=await API.getAllCards(),r=document.querySelector(".default-text");0===t.length?r.textContent="No items have been added":(this.clearCards(),t.forEach(e=>new Card(cardClasses,e).render()),r.textContent=""),this.clearFilterFields()}}showCards(e){if(0===e.length){const t=document.querySelector(".default-text");t.textContent="No matches"}else e.forEach(e=>new Card(cardClasses,e).render())}async filter(e){e.preventDefault();const t=document.querySelector("#search-content"),r=document.querySelector("#search-doctor"),o=document.querySelector("#search-urgency"),s=await API.getAllCards();var a;""!==t.value&&(e=s.filter(e=>-1<e.fullName.toLowerCase().indexOf(t.value.toLowerCase())),this.clearCards(),this.showCards(e)),"Select doctor"!==r.value&&(a=s.filter(e=>e.doctorType===r.value),this.clearCards(),this.showCards(a)),"Select urgency"!==o.value&&(a=s.filter(e=>e.urgencyType===o.value),this.clearCards(),this.showCards(a))}render(){const{self:e,container:t,searchBtn:r,resetFilter:o}=this.elements;r.textContent="Search",o.textContent="All cards",t.prepend(searchByContent,searchByDoctor,searchByUrgency,r,o),e.prepend(t),r.addEventListener("click",e=>this.filter(e)),o.addEventListener("click",e=>this.reset(e)),super.render()}}const searchByContent=new Input(searchTitle).render(),searchByDoctor=new Select(searchDoctor).render(),searchByUrgency=new Select(searchUrgency).render();import Component from"./Component.js";import{footerClasses}from"./config.js";export default class Footer extends Component{constructor(e){super({parent:document.querySelector("main"),self:document.createElement("footer"),textContainer:document.createElement("p")},e)}render(){const{parent:e,self:t,textContainer:r}=this.elements;r.textContent="Copyright Â© 2021 Medical Company All rights reserved",t.append(r),super.render(),e.after(t)}}const footer=new Footer(footerClasses);footer.render();import Component from"./Component.js";import{headerClasses}from"./config.js";export default class Header extends Component{constructor(e){super({parent:document.body,self:document.createElement("header"),nav:document.createElement("nav"),container:document.createElement("div"),link:document.createElement("a"),logo:document.createElement("img"),loginBtn:document.createElement("button"),createVisitBtn:document.createElement("button")},e)}async render(){const{self:e,nav:t,container:r,link:o,logo:s,loginBtn:a,createVisitBtn:i}=this.elements;o.href="#",o.textContent="Medical",s.src="./dist/img/logo.svg",s.alt="logo",a.id="login",a.textContent="Log in",i.id="createVisit",i.textContent="Create visit",e.append(t),t.append(r),r.append(o),o.prepend(s),window.localStorage.getItem("token")?r.append(i):r.append(a),a.addEventListener("click",()=>{document.querySelector("#loginFormModal").classList.add("active")}),i.addEventListener("click",()=>{document.querySelector("#visitFormModal").classList.add("active")}),super.render()}}new Header(headerClasses).render();export default class Input{constructor(e){var{classes:t,dataAttr:e}=e;this.classes=t,this.dataAttr=e}render(){const t=document.createElement("input");return this.classes.forEach(e=>t.classList.add(e)),this.dataAttr.forEach(e=>t.setAttribute(e.title,e.value)),t}}import Component from"./Component.js";import Input from"./Input.js";import API from"./API.js";import{cardClasses,email,filterClasses,headerClasses,password}from"./config.js";import Filter from"./Filter.js";import Header from"./Header.js";import Card from"./Card.js";import{clearDefaultText}from"./scripts.js";export default class LoginForm extends Component{constructor(e){super({parent:document.querySelector("#loginFormWrapper"),self:document.createElement("form"),labelForEmail:document.createElement("label"),labelForPassword:document.createElement("label"),btnSubmit:document.createElement("button"),error:document.createElement("div"),inputEmail:new Input(email).render(),inputPassword:new Input(password).render()},e)}validateEmail(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())}async loginSubmit(e){e.preventDefault();const t=document.getElementById("pass");var r=document.getElementById("email"),o=this.validateEmail(r.value);const{error:s}=this.elements;try{if(!o||t.length<4)throw t.after(s),new Error("Incorrect email or password less than 4 characters");var a=await API.login({email:r.value,password:t.value});if(API.saveToken(a),!a)throw t.after(s),new Error("Invalid data");{localStorage.setItem("token",a),document.querySelector("#loginFormModal").classList.remove("active"),document.querySelector("#login").style.display="none";const i=document.querySelector(".header");i.remove(),new Header(headerClasses).render();const l=new Filter(filterClasses);window.localStorage.getItem("token")&&l.render(),await clearDefaultText();const n=await API.getAllCards();window.localStorage.getItem("token")&&n.forEach(e=>new Card(cardClasses,e).render())}}catch(e){s.textContent=e.message,s.style.display="block"}}async render(){const{self:e,labelForEmail:t,labelForPassword:r,btnSubmit:o,inputEmail:s,inputPassword:a}=this.elements;await super.render(),await e.append(t,s),await e.append(r,a),await e.append(o),t.textContent="Email address:",r.textContent="Password:",o.textContent="Log in",o.type="submit",o.addEventListener("click",e=>this.loginSubmit(e))}}import Component from"./Component.js";import{mainClasses}from"./config.js";export default class Main extends Component{constructor(e){super({parent:document.querySelector("header"),self:document.createElement("main"),defaultText:document.createElement("p"),cardContainer:document.createElement("div")},e)}render(){const{parent:e,self:t,defaultText:r,cardContainer:o}=this.elements;r.textContent="No items have been added",t.append(r,o),super.render(),e.after(t)}}new Main(mainClasses).render();import Component from"./Component.js";export default class Modal extends Component{constructor(e,t,r,o){super({parent:document.querySelector(".main"),self:document.createElement("div"),title:document.createElement("h3"),modalDialog:document.createElement("div"),modalContent:document.createElement("div"),modalHeader:document.createElement("div"),modalBody:document.createElement("div"),btnClose:document.createElement("button")},o),this.titleText=e,this.idForModal=t,this.idForForm=r}closeWindow({target:e}){if(e.classList.contains("btn-close")||e.classList.contains("shadow-bg")){document.querySelector(`#${this.idForModal}`).classList.remove("active"),document.getElementById("email").value="",document.getElementById("pass").value="";const t=document.querySelector(".select-doctor"),r=document.querySelector(".select-doctor-wrapper");null!==r.nextSibling&&r.nextSibling.remove(),t.value="Choose a doctor"}}render(){const{self:e,title:t,modalDialog:r,modalContent:o,modalHeader:s,modalBody:a,btnClose:i}=this.elements;e.append(r),r.append(o),o.append(s),s.prepend(t),s.append(i),o.append(a),a.id=this.idForForm,e.id=this.idForModal,t.textContent=this.titleText,e.addEventListener("click",e=>this.closeWindow(e)),super.render()}}export default class Select{constructor(e){var{id:t,classes:r,options:e}=e;this.classes=r,this.id=t,this.options=e}render(){const t=document.createElement("select");void 0!==this.id&&t.setAttribute("id",this.id),this.classes.forEach(e=>t.classList.add(e));var e=this.options.map(({value:e,title:t,text:r})=>"selected"===e?`<option ${e}>${t}</option>`:`<option value="${e}">${r}</option>`).join("");return t.insertAdjacentHTML("afterbegin",`${e}`),t}}import Input from"./Input.js";export default class Textarea extends Input{constructor(e){super(e)}render(){const t=document.createElement("textarea");return this.classes.forEach(e=>t.classList.add(e)),this.dataAttr.forEach(e=>t.setAttribute(e.title,e.value)),t}}import VisitForm from"./VisitForm.js";import Input from"./Input.js";import{inputRegularPressure,inputBodyMassIndex,inputPastDiseases,inputAge,cardClasses}from"./config.js";import API from"./API.js";import Card from"./Card.js";export default class VisitCardiologistForm extends VisitForm{constructor(e,t,r,o){super(e,t,r,o),this.cardiologistElements={labelForRegularPressure:document.createElement("label"),regularPressureInput:new Input(inputRegularPressure).render(),labelForBodyMassIndex:document.createElement("label"),bodyMassIndex:new Input(inputBodyMassIndex).render(),labelForPastDiseases:document.createElement("label"),pastDiseases:new Input(inputPastDiseases).render(),labelForAge:document.createElement("label"),ageInput:new Input(inputAge).render(),error:document.createElement("div")}}async visitFormSubmitCreate(e){e.preventDefault();var t=document.getElementById("regularPressure"),r=document.getElementById("bodyMassIndex"),o=document.getElementById("pastDiseases"),s=document.getElementById("age"),a=document.getElementById("visitPurpose"),i=document.getElementById("fullName"),l=document.getElementById("visitDescription"),n=document.querySelector(".select-urgency"),e=document.querySelector(".select-doctor");if(i.value&&e.value&&a.value&&n.value&&t.value&&r.value&&o.value&&s.value){s={fullName:i.value,doctorType:e.value,visitPurpose:a.value,urgencyType:n.value,visitDescription:l.value,regularPressure:t.value,BMI:r.value,CVD:o.value,age:s.value};super.clearWrapper(),document.querySelector("#visitFormModal").classList.remove("active");s=await API.saveCard(s);await new Card(cardClasses,s).render()}else{const c=document.querySelector(".visit-error");c.style.display="block";const d=document.querySelector(".create-visit");d.before(c),c.textContent="Please fill in required * fields"}}async visitFormSubmitEdit(e){e.preventDefault();var t=document.getElementById("regularPressure"),r=document.getElementById("bodyMassIndex"),o=document.getElementById("pastDiseases"),s=document.getElementById("age"),a=document.getElementById("visitPurpose"),i=document.getElementById("fullName"),l=document.getElementById("visitDescription"),n=document.querySelector(".select-urgency"),e=document.querySelector(".edit-doctor"),s={id:this.id,fullName:i.value,doctorType:e.value,visitPurpose:a.value,urgencyType:n.value,visitDescription:l.value,regularPressure:t.value,BMI:r.value,CVD:o.value,age:s.value};document.getElementById(`${this.cardObject.id}`).remove(),document.querySelector("#editFormModal").classList.remove("active"),super.clearWrapper();s=await API.editCard(s);await new Card(cardClasses,s).render()}async render(){await super.render();const{labelForRegularPressure:e,regularPressureInput:t,labelForBodyMassIndex:r,bodyMassIndex:o,labelForPastDiseases:s,pastDiseases:a,labelForAge:i,ageInput:l,error:n}=this.cardiologistElements;for(var c in this.cardiologistElements){const f=this.cardiologistElements[c];f.className=this.classes[c]}e.textContent="*Regular pressure:",r.textContent="*Body mass index:",s.textContent="*Past diseases:",i.textContent="*Age:";var{regularPressure:d,BMI:m,CVD:u,age:p}=this.cardObject;let v;v=this.editFlag?(t.value=d,o.value=m,a.value=u,l.value=p,document.querySelector(".edit-visit")):document.querySelector(".create-visit"),await v.before(e,t,r,o,s,a,i,l,n)}}import VisitForm from"./VisitForm.js";import Input from"./Input.js";import{cardClasses,inputLastVisitDate}from"./config.js";import API from"./API.js";import Card from"./Card.js";export default class VisitDentistForm extends VisitForm{constructor(e,t,r={},o){super(e,t,r,o),this.dentistElements={labelForLastVisitDate:document.createElement("label"),lastVisitDateInput:new Input(inputLastVisitDate).render(),error:document.createElement("div")}}async visitFormSubmitCreate(e){e.preventDefault();var t=document.getElementById("visitPurpose"),r=document.getElementById("fullName"),o=document.getElementById("visitDescription"),s=document.querySelector(".select-urgency"),a=document.querySelector(".select-doctor"),e=document.getElementById("visitDate");if(r.value&&a.value&&t.value&&s.value&&e.value){e={fullName:r.value,doctorType:a.value,visitPurpose:t.value,urgencyType:s.value,visitDescription:o.value,lastVisitDate:e.value};super.clearWrapper(),document.querySelector("#visitFormModal").classList.remove("active");e=await API.saveCard(e);await new Card(cardClasses,e).render()}else{const i=document.querySelector(".visit-error");i.style.display="block";const l=document.querySelector(".create-visit");l.before(i),i.textContent="Please fill in required * fields"}}async visitFormSubmitEdit(e){e.preventDefault();var t=document.getElementById("visitPurpose"),r=document.getElementById("fullName"),o=document.getElementById("visitDescription"),s=document.querySelector(".select-urgency"),a=document.querySelector(".edit-doctor"),e=document.getElementById("visitDate"),e={id:this.id,fullName:r.value,doctorType:a.value,visitPurpose:t.value,urgencyType:s.value,visitDescription:o.value,lastVisitDate:e.value};super.clearWrapper(),document.getElementById(`${this.cardObject.id}`).remove(),document.querySelector("#editFormModal").classList.remove("active");e=await API.editCard(e);await new Card(cardClasses,e).render()}async render(){await super.render();const{labelForLastVisitDate:e,lastVisitDateInput:t,error:r}=this.dentistElements;for(var o in this.dentistElements){const i=this.dentistElements[o];i.className=this.classes[o]}e.textContent="*Last visit date:";var{lastVisitDate:s}=this.cardObject;let a;a=this.editFlag?(t.value=s,document.querySelector(".edit-visit")):document.querySelector(".create-visit"),await a.before(e,t,r)}}import Component from"./Component.js";import Input from"./Input.js";import Textarea from"./Textarea.js";import Select from"./Select.js";import{inputVisitPurpose,selectUrgencyType,inputFullName,textareaVisitDescription}from"./config.js";export default class VisitForm extends Component{constructor(e,t,r={},o=".select-doctor-wrapper"){super({parent:document.querySelector(o),self:document.createElement("form"),labelForVisitPurpose:document.createElement("label"),visitPurposeInput:new Input(inputVisitPurpose).render(),labelForSelectUrgency:document.createElement("label"),selectUrgencyType:new Select(selectUrgencyType).render(),labelForFullName:document.createElement("label"),fullNameInput:new Input(inputFullName).render(),labelForVisitDescription:document.createElement("label"),visitDescriptionTextarea:new Textarea(textareaVisitDescription).render(),btnSubmit:document.createElement("button")},e),this.editFlag=t;var{id:s,fullName:a,doctorType:i,visitPurpose:l,urgencyType:n,visitDescription:c,regularPressure:d,BMI:o,CVD:e,age:t,dateOfLastVisit:r}=this.cardObject=r;this.id=s,this.fullName=a,this.doctorType=i,this.visitPurpose=l,this.urgencyType=n,this.visitDescription=c,this.regularPressure=d,this.BMI=o,this.CVD=e,this.age=t,this.dateOfLastVisit=r}clearWrapper(){const e=document.querySelector(".edit-doctor-wrapper");null!==e.nextSibling&&e.nextSibling.remove();const t=document.querySelector(".select-doctor"),r=document.querySelector(".select-doctor-wrapper");null!==r.nextSibling&&r.nextSibling.remove(),t.value="Choose a doctor"}async render(){const{parent:e,self:t,labelForVisitPurpose:r,visitPurposeInput:o,labelForSelectUrgency:s,selectUrgencyType:a,labelForFullName:i,fullNameInput:l,labelForVisitDescription:n,visitDescriptionTextarea:c,btnSubmit:d}=this.elements;var{fullName:m,visitDescription:u,visitPurpose:p,urgencyType:v}=this.cardObject;r.textContent="*Visit purpose:",s.textContent="*Choose urgency:",i.textContent="*Full name:",n.textContent="Visit description:",this.editFlag&&(l.value=m,a.value=v,o.value=p,c.value=u),this.editFlag?(d.textContent="Edit",d.addEventListener("click",e=>this.visitFormSubmitEdit(e))):(d.textContent="Create",d.addEventListener("click",e=>this.visitFormSubmitCreate(e))),a.setAttribute("required",""),d.type="submit",await t.append(r,o,s,a,i,l,n,c,d),await super.render(),e.after(t)}}import VisitForm from"./VisitForm.js";import Input from"./Input.js";import{cardClasses,inputAge}from"./config.js";import API from"./API.js";import Card from"./Card.js";export default class VisitTherapistForm extends VisitForm{constructor(e,t,r={},o){super(e,t,r,o),this.therapistElements={labelForAge:document.createElement("label"),ageInput:new Input(inputAge).render(),error:document.createElement("div")}}async visitFormSubmitCreate(e){e.preventDefault();var t=document.getElementById("visitPurpose"),r=document.getElementById("fullName"),o=document.getElementById("visitDescription"),s=document.querySelector(".select-urgency"),a=document.querySelector(".select-doctor"),e=document.getElementById("age");if(r.value&&a.value&&t.value&&s.value&&e.value){e={fullName:r.value,doctorType:a.value,visitPurpose:t.value,urgencyType:s.value,visitDescription:o.value,age:e.value};super.clearWrapper(),document.querySelector("#visitFormModal").classList.remove("active");e=await API.saveCard(e);await new Card(cardClasses,e).render()}else{const i=document.querySelector(".visit-error");i.style.display="block";const l=document.querySelector(".create-visit");l.before(i),i.textContent="Please fill in required * fields"}}async visitFormSubmitEdit(e){e.preventDefault();var t=document.getElementById("visitPurpose"),r=document.getElementById("fullName"),o=document.getElementById("visitDescription"),s=document.querySelector(".select-urgency"),a=document.querySelector(".edit-doctor"),e=document.getElementById("age"),e={id:this.id,fullName:r.value,doctorType:a.value,visitPurpose:t.value,urgencyType:s.value,visitDescription:o.value,age:e.value};document.getElementById(`${this.cardObject.id}`).remove(),document.querySelector("#editFormModal").classList.remove("active"),super.clearWrapper();e=await API.editCard(e);await new Card(cardClasses,e).render()}async render(){await super.render();const{labelForAge:e,ageInput:t,error:r}=this.therapistElements;for(var o in this.therapistElements){const i=this.therapistElements[o];i.className=this.classes[o]}e.textContent="*Age:";var{age:s}=this.cardObject;let a;a=!0===this.editFlag?(t.value=s,document.querySelector(".edit-visit")):document.querySelector(".create-visit"),await a.before(e,t,r)}}const headerClasses={parent:"body",self:"header",nav:"navbar navbar-expand-lg navbar-light bg-light",container:"container-fluid",link:"navbar-brand",logo:"logo",loginBtn:"btn btn-outline-primary",createVisitBtn:"btn btn-outline-primary"},footerClasses={parent:"main",self:"footer",textContainer:"copyright"},mainClasses={parent:"header",self:"main container",defaultText:"display-6 default-text",cardContainer:"card-container"},modalClasses={parent:"main container",self:"shadow-bg",title:"h3",modalDialog:"modal-dialog modal-dialog-centered",modalContent:"modal-content",modalHeader:"modal-header",modalBody:"modal-body",modalFooter:"modal-footer",btnClose:"btn-close"},loginFormClasses={parent:"modal-body",self:"",labelForEmail:"form-label",wrapperEmail:"mb-3",labelForPassword:"form-label",wrapperPassword:"mb-3",btnSubmit:"btn btn-primary",error:"invalid-feedback mb-3",inputEmail:"form-control mb-3",inputPassword:"form-control mb-3"},email={classes:["form-control"],dataAttr:[{title:"id",value:"email"},{title:"placeholder",value:"Enter your email"},{title:"type",value:"email"}]},password={classes:["form-control"],dataAttr:[{title:"id",value:"pass"},{title:"placeholder",value:"Enter your password"},{title:"type",value:"password"}]},selectDoctorType={classes:["form-select","select-doctor"],options:[{value:"selected",title:"Choose a doctor"},{value:"cardiologist",text:"Cardiologist"},{value:"dentist",text:"Dentist"},{value:"therapist",text:"Therapist"}]},inputVisitPurpose={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"visitPurpose"},{title:"placeholder",value:"visit purpose"},{title:"type",value:"text"}]},selectUrgencyType={classes:["form-select","select-urgency"],options:[{value:"",text:""},{value:"normal",text:"normal"},{value:"priority",text:"priority"},{value:"urgent",text:"urgent"}]},inputFullName={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"fullName"},{title:"placeholder",value:"enter full name"},{title:"type",value:"text"}]},textareaVisitDescription={classes:["form-control"],dataAttr:[{title:"id",value:"visitDescription"},{title:"placeholder",value:"visit description"}]},visitCardiologistFormClasses={parent:"mb-3 select-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary create-visit",labelForRegularPressure:"form-label",regularPressureInput:"form-control mb-3",labelForBodyMassIndex:"form-label",bodyMassIndex:"form-control mb-3",labelForPastDiseases:"form-label",pastDiseases:"form-control mb-3",labelForAge:"form-label",ageInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"},inputRegularPressure={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"regularPressure"},{title:"placeholder",value:"regular pressure"},{title:"type",value:"text"}]},inputBodyMassIndex={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"bodyMassIndex"},{title:"placeholder",value:"body mass index"},{title:"type",value:"text"}]},inputPastDiseases={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"pastDiseases"},{title:"placeholder",value:"past diseases of the cardiovascular system"},{title:"type",value:"text"}]},inputAge={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"age"},{title:"placeholder",value:"your age"},{title:"type",value:"text"}]},visitDentistFormClasses={parent:"mb-3 select-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary create-visit",labelForLastVisitDate:"form-label",lastVisitDateInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"},inputLastVisitDate={classes:["form-control"],dataAttr:[{title:"required",value:""},{title:"id",value:"visitDate"},{title:"placeholder",value:"date of last visit"},{title:"type",value:"date"}]},visitTherapistFormClasses={parent:"mb-3 select-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary create-visit",labelForAge:"form-label",ageInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"},searchTitle={classes:["form-control","col-sm","m-1"],dataAttr:[{title:"type",value:"search"},{title:"placeholder",value:"Search by name"},{title:"id",value:"search-content"}]},searchDoctor={id:"search-doctor",classes:["form-select","col-sm","m-1"],options:[{value:"selected",title:"Select doctor"},{value:"cardiologist",text:"cardiologist"},{value:"dentist",text:"dentist"},{value:"therapist",text:"therapist"}]},searchUrgency={id:"search-urgency",classes:["form-select","col-sm","m-1"],options:[{value:"selected",title:"Select urgency"},{value:"normal",text:"normal"},{value:"priority",text:"priority"},{value:"urgent",text:"urgent"}]},filterClasses={parent:"main container",self:"container mt-4 mb-4 filter",container:"row",searchBtn:"btn btn-outline-primary col-sm m-1",resetFilter:"btn btn-success col-sm m-1 reset-filter"},cardClasses={parent:"card-container mb-4",self:"card",cardBody:"card-body",cardFooter:"card-body",cardFullName:"mb-3 card-title",cardDoctorType:"mb-3 card-text card-subtitle",cardVisitPurpose:"mb-3 card-text",cardUrgencyType:"mb-3 card-text",cardRegularPressure:"mb-3 card-text",cardBMI:"mb-3 card-text",cardCVD:"mb-3 card-text",cardAge:"mb-3 card-text",cardLastVisitDate:"mb-3 card-text",cardDescription:"mb-3 card-text",btnShowMore:"btn btn-primary mb-3",error:"invalid-feedback mb-3 visit-error"},selectEditType={classes:["form-select","select-edit"],options:[{value:"selected",title:"Choose option"},{value:"Edit",text:"Edit"},{value:"Delete",text:"Delete"}]},editDoctorType={classes:["form-select","edit-doctor"],options:[{value:"selected",title:"Choose a doctor"},{value:"cardiologist",text:"Cardiologist"},{value:"dentist",text:"Dentist"},{value:"therapist",text:"Therapist"}]},editVisitDentistFormClasses={parent:"mb-3 edit-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary edit-visit",labelForLastVisitDate:"form-label",lastVisitDateInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"},editVisitCardiologistFormClasses={parent:"mb-3 edit-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary edit-visit",labelForRegularPressure:"form-label",regularPressureInput:"form-control mb-3",labelForBodyMassIndex:"form-label",bodyMassIndex:"form-control mb-3",labelForPastDiseases:"form-label",pastDiseases:"form-control mb-3",labelForAge:"form-label",ageInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"},editVisitTherapistFormClasses={parent:"mb-3 edit-doctor-wrapper",self:"form",labelForVisitPurpose:"form-label",visitPurposeInput:"form-control mb-3",labelForSelectUrgency:"form-label",selectUrgencyType:"form-select mb-3 select-urgency",labelForFullName:"form-label",fullNameInput:"form-control mb-3",labelForVisitDescription:"form-label",visitDescriptionTextarea:"form-control mb-3",btnSubmit:"btn btn-primary edit-visit",labelForAge:"form-label",ageInput:"form-control mb-3",error:"invalid-feedback mb-3 visit-error"};import Input from"./Input.js";import Textarea from"./Textarea.js";import Select from"./Select.js";import Header from"./Header.js";import Main from"./Main.js";import Footer from"./Footer.js";import{modalClasses,loginFormClasses,selectDoctorType,visitCardiologistFormClasses,visitDentistFormClasses,visitTherapistFormClasses,filterClasses,cardClasses,editDoctorType}from"./config.js";import Modal from"./Modal.js";import LoginForm from"./LoginForm.js";import Filter from"./Filter.js";import VisitForm from"./VisitForm.js";import VisitCardiologistForm from"./VisitCardiologistForm.js";import VisitDentistForm from"./VisitDentistForm.js";import VisitTherapistForm from"./VisitTherapistForm.js";import Card from"./Card.js";import API from"./API.js";async function globalRender(){await clearDefaultText();const e=new Modal("Please, log in","loginFormModal","loginFormWrapper",modalClasses);await e.render();const t=new LoginForm(loginFormClasses);await t.render();const r=new Modal("Create visit","visitFormModal","visitFormWrapper",modalClasses);await r.render();const o=new Modal("Edit your visit","editFormModal","editFormWrapper",modalClasses);await o.render();var s=new Select(selectDoctorType).render(),a=new Select(editDoctorType).render();const i=document.querySelector("#visitFormWrapper"),l=document.createElement("div");l.className="mb-3 edit-doctor-wrapper",l.append(a),document.querySelector("#editFormWrapper").append(l);const n=document.createElement("div");n.className="mb-3 select-doctor-wrapper";const c=document.createElement("img");c.src="./dist/img/choose_doctor.jpeg",c.className="img-fluid",n.append(s),i.append(n,c),await chooseDoctor();const d=new Filter(filterClasses);if(window.localStorage.getItem("token")&&d.render(),window.localStorage.getItem("token")){const m=await API.getAllCards();m.forEach(e=>new Card(cardClasses,e).render())}}globalRender();async function clearDefaultText(){await setInterval(()=>{const e=document.querySelector(".card-container"),t=document.querySelector(".display-6");e.hasChildNodes()?t.style.display="none":t.style.display="block"},0)}async function chooseDoctor(){const r=document.querySelector(".select-doctor-wrapper"),o=document.querySelector(".select-doctor");await o.addEventListener("change",()=>{if("cardiologist"===o.value)new VisitCardiologistForm(visitCardiologistFormClasses).render(),null!==r.nextSibling&&r.nextSibling.remove();else if("dentist"===o.value)new VisitDentistForm(visitDentistFormClasses).render(),null!==r.nextSibling&&r.nextSibling.remove();else if("therapist"===o.value)new VisitTherapistForm(visitTherapistFormClasses).render(),null!==r.nextSibling&&r.nextSibling.remove();else if("Choose a doctor"===o.value){null!==r.nextSibling&&r.nextSibling.remove();const e=document.querySelector("#visitFormWrapper"),t=document.createElement("img");t.src="./dist/img/choose_doctor.jpeg",t.className="img-fluid",e.append(t)}})}export{headerClasses,footerClasses,mainClasses,modalClasses,loginFormClasses,email,password,selectDoctorType,inputVisitPurpose,selectUrgencyType,inputFullName,textareaVisitDescription,visitCardiologistFormClasses,inputRegularPressure,inputBodyMassIndex,inputPastDiseases,inputAge,visitDentistFormClasses,inputLastVisitDate,visitTherapistFormClasses,searchTitle,searchDoctor,searchUrgency,filterClasses,cardClasses,selectEditType,editDoctorType,editVisitDentistFormClasses,editVisitCardiologistFormClasses,editVisitTherapistFormClasses,clearDefaultText};